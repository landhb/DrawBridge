name: 'Build and Test'
description: 'Build a test against a specified kernel version.'
inputs:
  kernel:
    description: 'Target kernel version.'
    required: true
outputs:
  exit-code:
    description: "Exit Code"
    value: ${{ steps.run.outputs.realexit }}
  test-status:
    description: "Test Status"
    value: ${{ steps.run.outputs.test }}
  test-color:
    description: "Test Badge Color"
    value: ${{ steps.run.outputs.testc }}
  insmod-status:
    description: "Insmod Status"
    value: ${{ steps.run.outputs.insmod }}
  insmod-color:
    description: "Insmod Badge Color"
    value: ${{ steps.run.outputs.insmodc }}
  build-status:
    description: "Insmod Status"
    value: ${{ steps.run.outputs.build }}
  build-color:
    description: "Insmod Badge Color"
    value: ${{ steps.run.outputs.buildc }}
runs:
  using: "composite"
  steps:
  - uses: actions/checkout@v3
  - uses: actions-rs/toolchain@v1
    with:
        profile: minimal
        toolchain: stable
        target: x86_64-unknown-linux-musl
        override: true
  - name: Cache Nixmodule Artifacts
    uses: actions/cache@v3
    with:
      path: |
        ~/.cache/nixmodule
        ~/.cargo/
      key: ${{ runner.os }}-nixmodule-v1

  # Requires qemu-system and musl linker
  - name: Install deps
    run: |
      sudo apt update
      sudo apt install qemu-system musl-tools

  # Currently requires nixmodule >= 0.4.0 to use initrd
  - name: Install or upgrade nixmodule
    run: |
      if ! command -v nixmodule; then cargo install nixmodule; fi; \
      nixmodule -V; \
      if [ $(printf '%s\n' $(nixmodule -V | cut -d " " -f 2) "0.4.0" | sort -V | head -n1) != "0.4.0" ]; then cargo install -f nixmodule; fi

  # Run the test and obtain badge results via exit code
  - name: Perform the test
    id: run
    run: cd module; NIXMODULEARGS="-k ${{ inputs.kernel }} -c ci-config.toml" ./tests/run.sh